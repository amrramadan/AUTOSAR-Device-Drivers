 /******************************************************************************
 *
 * Module: Port
 *
 * File Name: Port.h
 *
 * Description: Header file for Port Module.
 *
 * Author: Mohamed Tarek
 ******************************************************************************/

#ifndef PORT_H
#define PORT_H

#include "Common_Macros.h"
#include "Micro_Config.h"
#include "Std_Types.h"
#include "PORT_Cfg.h"

#define PORT_VENDOR_ID    (1000U)

/* Dio Module Id */
#define PORT_MODULE_ID    (120U)

/* Dio Instance Id */
#define PORT_INSTANCE_ID  (0U)

/*
 * Module Version 1.0.0
 */
#define PORT_SW_MAJOR_VERSION           (1U)
#define PORT_SW_MINOR_VERSION           (0U)
#define PORT_SW_PATCH_VERSION           (0U)

/*
 * AUTOSAR Version 4.0.3
 */
#define PORT_AR_RELEASE_MAJOR_VERSION   (4U)
#define PORT_AR_RELEASE_MINOR_VERSION   (0U)
#define PORT_AR_RELEASE_PATCH_VERSION   (3U)


#if ((STD_TYPES_AR_RELEASE_MAJOR_VERSION != PORT_AR_RELEASE_MAJOR_VERSION)\
 ||  (STD_TYPES_AR_RELEASE_MINOR_VERSION != PORT_AR_RELEASE_MINOR_VERSION)\
 ||  (STD_TYPES_AR_RELEASE_PATCH_VERSION != PORT_AR_RELEASE_PATCH_VERSION))
  #error "The AR version of Std_Types.h does not match the expected version"
#endif



#if ((PORT_CFG_AR_RELEASE_MAJOR_VERSION != PORT_AR_RELEASE_MAJOR_VERSION)\
 ||  (PORT_CFG_AR_RELEASE_MINOR_VERSION != PORT_AR_RELEASE_MINOR_VERSION)\
 ||  (PORT_CFG_AR_RELEASE_PATCH_VERSION != PORT_AR_RELEASE_PATCH_VERSION))
  #error "The AR version of Port_Cfg.h does not match the expected version"
#endif


#if ((PORT_CFG_SW_MAJOR_VERSION != PORT_SW_MAJOR_VERSION)\
 ||  (PORT_CFG_SW_MINOR_VERSION != PORT_SW_MINOR_VERSION)\
 ||  (PORT_CFG_SW_PATCH_VERSION != PORT_SW_PATCH_VERSION))
  #error "The SW version of Port_Cfg.h does not match the expected version"
#endif
#define INPUT     (0U)
#define OUTPUT    (1U)

#define PORT_E_PARAM_PIN				(uint8)0x0A
#define PORT_E_PARAM_CONFIG             (uint8)0x0C
#define PORT_E_PARAM_INVALID_MODE	    (uint8)0x0D
#define PORT_E_MODE_UNCHANGEABLE	    (uint8)0x0E
#define PORT_E_PARAM_POINTER            (uint8)0x10
#define PORT_E_UNINIT                   (uint8)0xF0

#define

typedef enum {
	PORT_PIN_LEVEL_HIGH	= 	STD_HIGH,
	PORT_PIN_LEVEL_LOW	=	STD_LOW
}PortPinLevelValue;

typedef enum {
	PORT_PIN_IN	 = 	STD_LOW,
	PORT_PIN_OUT =	STD_HIGH
}Port_PinDirectionType;






/****************************************************************************************************************/
/* Description: Structure to describe each individual PIN contains:
 *	1. the PORT Which the pin belongs to. 0, 1, 2 or 3
 *	2. the number of the pin in the PORT.
 *  3. the direction of pin --> INPUT or OUTPUT
 */
typedef struct 
{
	uint8 port; 
	uint8 pin_num; 
	uint8 direction;
}Port_Config;
/***************************************************************************************************************/

/* configure the PIN to input or output pin */
void Port_SetDirection(const Port_Config *s_Config_Msg );

#endif /* PORT_H */
